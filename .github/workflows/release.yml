on:
  push:
    tags: ["*"]

permissions:
  contents: write
  actions: write

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: apt-update
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get update

      - name: autoremove
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt autoremove

      - name: Install libarchive rpm on Linux
        if: startsWith(matrix.os, 'ubuntu:latest')
        run: sudo apt-get install libarchive-tools rpm

      - name: Release Electron app
        run: npm run release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifact files
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}
          path: dist/**/*